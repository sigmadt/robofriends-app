{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardArray","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC1B,OACG,sBAAKC,UAAU,sDAAf,UACG,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,mBACpB,gCACG,6BAAKF,IACL,4BAAIC,WCKDK,EAXE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACXC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAC9B,OAAO,cAAC,EAAD,CAAMT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMC,MAAOM,EAAOI,GAAGV,WAE5E,OACG,8BACIO,KCMKI,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAClB,OACG,8BACG,uBACAC,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEJI,EARA,SAACC,GACb,OACG,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACIJ,EAAMK,YCwCDC,G,wDArCZ,aAAe,IAAD,8BACX,gBAaHC,eAAiB,SAACC,GACf,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAbzC,EAAKC,MAAQ,CACVxB,OAAQ,GACRqB,YAAa,IAJL,E,qDAQd,WAAqB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEpB,OAAQ6B,S,oBAO1C,WACG,MAAgCC,KAAKN,MAA7BxB,EAAR,EAAQA,OAAQqB,EAAhB,EAAgBA,YACVU,EAAiB/B,EAAOgC,QAAO,SAAAC,GAClC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAASd,EAAYa,kBAGxD,OACA,sBAAKtC,UAAU,KAAf,UACG,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACG,cAAC,EAAD,CAAUlB,OAAQ+B,a,GA9BZK,cCKHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCKdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.79f1e9ff.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Card = ({ name, email, id }) => {\n   return(\n      <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n         <img alt='robot' src={`https://robohash.org/${id}?size=200x200`} />\n         <div>\n            <h2>{name}</h2>\n            <p>{email}</p>\n         </div>\n      </div>\n   );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ( {robots} ) => {\n   const cardArray = robots.map((user, i) => {\n         return <Card id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\n      })\n   return(\n      <div>\n         {cardArray}\n      </div>\n   )\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n   return(\n      <div>\n         <input \n         type='search' \n         placeholder='search robots' \n         onChange={searchChange} />\n      </div>\n      \n   )\n}\n\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = (props) => {\n   return(\n      <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}} >\n         {props.children}\n      </div>\n   );\n};\n\nexport default Scroll;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\n// import { robots } from './robots';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\nclass App extends Component {\n   constructor() {\n      super()\n      this.state = {\n         robots: [],\n         searchfield: ''\n      }\n   }\n\n   componentDidMount() {\n      fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ robots: users }))\n   }\n\n   onSearchChange = (event) => {\n      this.setState({searchfield: event.target.value})\n   }\n\n   render() {\n      const { robots, searchfield } = this.state\n      const filteredRobots = robots.filter(robot => {\n         return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n      })\n\n      return(\n      <div className='tc'>\n         <h1 className='f1'>RoboFriends</h1>\n         <SearchBox searchChange={this.onSearchChange}/>\n         <Scroll>\n            <CardList robots={filteredRobots}/>\n         </Scroll>\n      </div>\n\n   );\n   }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport App from './containers/App'\nimport 'tachyons';\n\n\n\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}